<%=

# This code will try to connect to the first database it finds (either mysql or postgres)
# This is just an example application so this is ok. Don't try to use this
# code in production if you are planning to bound more than one databases.

require 'json'
require 'yaml'

services = JSON.parse(ENV["VCAP_SERVICES"])
$db_service = services.values.flatten.find do |service_attrs|
  %w(mysql postgres mariadb).any? { |db| service_attrs['label'].include? db }
end

credentials = $db_service['credentials']

def get_credential(keys)
  $db_service['credentials'][keys.find { |k| $db_service['credentials'].include? k }]
end

conf={
  username: get_credential(%w(user username MASTER_USERNAME)),
  password: get_credential(%w(password MASTER_PASSWORD)),
  database: get_credential(%w(database dbname Protocol DB_NAME)) || $db_service['label'],
  host:     get_credential(%w(host ENDPOINT_ADDRESS)),
  port:     get_credential(%w(port PORT)).to_i,
  pool:     5
}

case $db_service['label']
when /mysql/
  conf.merge!({
    adapter: 'mysql2',
    encoding: 'utf8',
    ssl_mode: 'preferred',
  })
when /postgres/
  conf.merge!({
    adapter: 'postgresql',
    encoding: 'unicode',
    sslmode: 'allow',
  })
end

({
  default: conf,
  development: conf,
  test: conf,
  production: conf
}).to_json # Use JSON to avoid Psych serializing symbols as :foo
%>
